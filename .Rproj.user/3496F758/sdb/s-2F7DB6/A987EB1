{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Day 2\"\nauthor: \"Your Name\"\ndate: \"June 20, 2017\"\noutput: html_document\n---\n\n\n<style type=\"text/css\">\n.table {\n\n    width: 80%;\n    margin-left:10%; \n    margin-right:10%;\n}\n</style>\n```{r,setup, echo=FALSE, cache=TRUE}\n## numbers >= 10^5 will be denoted in scientific notation,\n## and rounded to 2 digits\noptions(scipen = 3, digits = 3)\n```\n\n\n\n\n#Project Goals:\n\nThe goal of this project is to get better  aquainted with Dplyr and working with data. \n\n[Project 7 Markdown](https://canvas.brown.edu/files/60653753/download?download_frd=1)\n\n# New York City Flights 13\n\n- `flights` [336,776 x 16]. Every flight leaving NYC in 2013.\n- `weather` [ 8719 x 14]. Hourly Weather Data.\n- `planes` [3322 x 9]. Plane data.\n- `airports` [1397 x 7]. Airport data. \n\n\n```{R}\nlibrary(nycflights13)\nlibrary(dplyr)\nflights\n```\n\n\n# Basic Dyplyr\n\nThe deplyr package uses verbs to perform data manipulation.\n- `filter()` and `slice()`\n- `arrange()`\n- `select()` and `rename()`\n- `distinct()`\n- `mutate()` and `transmute()`\n- `sample_n()` and `sample_frac()`\n\n## Filtering Rows\n\n1. Filter all flights on your birthday. \n2. Filter all flights in rows 567 - 589\n\n\n## Arranging Rows\n\n3. Use  `arrange()` to order the data by `year, month and day`\n4. Use `desc()` to arrange flights by arrival delay. \n\n## Select\n\n5. Select columns containing data information.\n6. Select columns including only plane information.\n7. Rename `tailnum` to `tail_num`\n\n\n## Mutating Rows\n\n8. Create a variable called `gain` which describes the difference between arrival delap and departure delay.\n9. Create a variable called speed which is distance over time in hours. \n\n## Summarise\n\n10. Summarise the average delay for all flights.\n\n\n# Overall Questions \n\n11. Split the complete dataset into individual planes and then summarise each plane by counting the number of flights (count = n()) and computing the average distance and arrival delay .  Then plot this:\n\n```\nggplot(delay, aes(dist, delay)) +\n  geom_point(aes(size = count), alpha = 1/2) +\n  geom_smooth() +\n  scale_size_area()\n```\n\n\n12.  Find the number of planes and the number of flights that go to each possible destination. \n\n\n\n### More Difficult\n\nIn the videos we learned about piping our commands. The goal of piping is to help use with the flow of our analysis. The steps we take are:\n- Think about it. \n- Describe it. \n- Do it. \n\n\n13. Consider the Function Below:\n\n\n\n    ```\n    filter(\n      summarise(\n        select(\n          group_by(flights, year, month, day),\n          arr_delay, dep_delay\n        ),\n        arr = mean(arr_delay, na.rm = TRUE),\n        dep = mean(dep_delay, na.rm = TRUE)\n      ),\n      arr > 30 | dep > 30\n    )\n    ```\n\n\n\n  a. What are some problems with this function? \n  b. How easy is it to follow the logic of this? \n  c. Rewrite this using piping to make it more understandable. \n  d. Does your rewritten command give the same results? \n  \n\n\n\n14. Consider the function below\n\n    ```\n    hourly_delay <- filter(\n              summarise(\n                  group_by(\n                      filter(\n                        flights, \n                        !is.na(dep_delay)\n                        ),\n                        date, hour\n                        ),\n                        delay=mean(dep_delay),\n                        n=n()\n                        ),\n                        n>10\n                        )\n                                          \n    ```\n\n\n  a. What are some problems with this function? \n  b. How easy is it to follow the logic of this? \n  c. Rewrite this using piping to make it more understandable. \n  d. Does your rewritten command give the same results? \n  \n\n\n\n## Consider how to join information from the other datasets in the package with the current information. Is there a way to tell if weather affected the departure  time? Ask yourself other questions about this data and then answer them below. ",
    "created" : 1497281668357.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "523934385",
    "id" : "A987EB1",
    "lastKnownWriteTime" : 1497283939,
    "last_content_update" : 1497283939030,
    "path" : "C:/Users/adam_/Dropbox (Personal)/Brown/NAMBARI/R Course/Exercises/Day2.Rmd",
    "project_path" : "Day2.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}